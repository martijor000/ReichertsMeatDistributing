@page "/ContactUs"
@using ReichertsMeatDistributing.Shared;
@using System.Text.Json;
@using System.Text;
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<div class="contact-container">


    <div class="contact-main">
        <!-- Contact Form Section -->
        <div class="contact-form-section">
            <div class="form-container">
                <h2>Send Us a Message</h2>
                <p class="form-subtitle">Fill out the form below and we'll get back to you promptly</p>

                @if (IsSubmitting)
                {
                    <div class="loading-spinner">
                        <div class="spinner"></div>
                        <p>Sending your message...</p>
                    </div>
                }
                else if (IsSubmitted)
                {
                    <div class="success-message">
                        <div class="success-icon">✓</div>
                                                 <h3>Message Sent Successfully!</h3>
                         <p>Thank you for contacting us. We'll get back to you soon.</p>
                        <button class="btn-secondary" @onclick="ResetForm">Send Another Message</button>
                    </div>
                }
                else
                {
                    <form class="contact-form" @onsubmit="SubmitForm" @onsubmit:preventDefault="true">
                        <div class="form-row">
                            <div class="form-group">
                                <label for="name">Full Name *</label>
                                <input type="text" id="name" @bind="ContactForm.Name" @bind:event="oninput" required />
                            </div>
                            <div class="form-group">
                                <label for="phone">Phone Number</label>
                                <input type="tel" id="phone" @bind="ContactForm.PhoneNumber" @bind:event="oninput" placeholder="(360) 123-4567" />
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="email">Email Address *</label>
                            <input type="email" id="email" @bind="ContactForm.Email" @bind:event="oninput" required />
                        </div>
                        
                        <div class="form-group">
                            <label for="message">Message *</label>
                            <textarea id="message" @bind="ContactForm.Message" @bind:event="oninput" rows="5" placeholder="Tell us about your needs, questions, or how we can help..." required></textarea>
                        </div>
                        
                        <button type="submit" class="btn-submit" disabled="@(!IsFormValid())">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
                            </svg>
                            Send Message
                        </button>
                    </form>
                }
            </div>
        </div>

        <!-- Contact Info Section -->
        <div class="contact-info-section">
            <div class="info-container">
                <h2>Contact Information</h2>
                
                <div class="contact-cards">
                    <div class="contact-card">
                        <div class="card-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122L9.98 10.97a.68.68 0 0 1-.198-.013l-2.46-.98a1.348 1.348 0 0 1-.748-.748l-.98-2.46a.68.68 0 0 1-.013-.198l.54-1.804a.678.678 0 0 0-.122-.58L3.654 1.328z"/>
                            </svg>
                        </div>
                        <div class="card-content">
                            <h3>Phone</h3>
                            <p>(360) 330-1653</p>
                            <a href="tel:+13603301653" class="contact-link">Call Now</a>
                        </div>
                    </div>

                    <div class="contact-card">
                        <div class="card-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4Zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2Zm13 2.383-4.708 2.825L15 11.105V5.383Zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741ZM1 11.105l4.708-2.897L1 5.383v5.722Z"/>
                            </svg>
                        </div>
                        <div class="card-content">
                            <h3>Email</h3>
                            <p>reichertsdistributinginc@gmail.com</p>
                            <a href="mailto:reichertsdistributinginc@gmail.com" class="contact-link">Send Email</a>
                        </div>
                    </div>

                    <div class="contact-card">
                        <div class="card-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8 1a3 3 0 1 0 0 6 3 3 0 0 0 0-6zM4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 4z"/>
                            </svg>
                        </div>
                        <div class="card-content">
                            <h3>Location</h3>
                            <p>3701 Northpark Drive<br>Centralia, WA 98531</p>
                            <a href="https://goo.gl/maps/TToGHisF5bkrnxJVA" target="_blank" class="contact-link">Get Directions</a>
                        </div>
                    </div>
                </div>

                <div class="business-hours">
                    <h3>Business Hours</h3>
                    <div class="hours-list">
                        <div class="hour-item">
                            <span>Monday - Friday</span>
                            <span>8:00 AM - 5:00 PM</span>
                        </div>
                        <div class="hour-item">
                            <span>Saturday</span>
                            <span>9:00 AM - 2:00 PM</span>
                        </div>
                        <div class="hour-item">
                            <span>Sunday</span>
                            <span>Closed</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ContactModel ContactForm = new();
    private bool IsSubmitting = false;
    private bool IsSubmitted = false;

    private bool IsFormValid()
    {
        return !string.IsNullOrWhiteSpace(ContactForm.Name?.Trim()) &&
               !string.IsNullOrWhiteSpace(ContactForm.Email?.Trim()) &&
               !string.IsNullOrWhiteSpace(ContactForm.Message?.Trim());
    }

    private async Task SubmitForm()
    {
        if (!IsFormValid()) return;

        IsSubmitting = true;
        try
        {
            var json = JsonSerializer.Serialize(ContactForm);
            var content = new StringContent(json, Encoding.UTF8, "application/json");
            
            var response = await HttpClient.PostAsync("api/contact/send", content);
            
            if (response.IsSuccessStatusCode)
            {
                IsSubmitted = true;
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "Failed to send message. Please try again or contact us directly.");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error sending message: {ex.Message}");
        }
        finally
        {
            IsSubmitting = false;
        }
    }

    private void ResetForm()
    {
        ContactForm = new();
        IsSubmitted = false;
        IsSubmitting = false;
    }
}

