@using ReichertsMeatDistributing.Shared;
@page "/admin/deals"
@inject CustomAuthenticationStateProvider AuthenticationStateProvider
@inject IDealService ideal
@inject NavigationManager navigationManager
<div class="imgContainer">
    <div>
    <h1>Deals</h1>
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @if(deals != null){
                    @foreach (var deal in deals)
                    {
                        <tr>
                            <td>@deal.Name</td>
                            <td>@deal.Description</td>
                            <td>@deal.Price.ToString("c")</td>
                            <td><a href="/admin/deals/edit/@deal.Id">Edit</a></td>
                            <td><button @onclick="()=>DeleteDeal(deal.Id)">Delete</button></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    <button @onclick="NavigateToAddDealPage">Add Deal</button>
    </div>
</div>

@code {

    private List<WeeklyDeal> deals;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/");
        }
        else if (!user.IsInRole("admin"))
        {
            navigationManager.NavigateTo("/");
        }
        await LoadDealsAsync();
    }

    private async Task LoadDealsAsync()
    {
        await ideal.GetDeals();
        deals = new List<WeeklyDeal>(ideal.deals);
    }

    private async Task DeleteDeal(int dealId)
    {
        await ideal.DeleteDeal(dealId);
        //await localStorageService.DeleteDealAsync(dealId);
        await LoadDealsAsync();
    }

    private void NavigateToAddDealPage()
    {
        navigationManager.NavigateTo("/admin/deals/add");
    }

}
